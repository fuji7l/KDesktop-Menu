// This file is generated by kconfig_compiler from kdesktopmenu_settings.kcfg.
// All changes you do to this file will be lost.
#ifndef KDESKTOPMENUSETTINGS_H
#define KDESKTOPMENUSETTINGS_H

#include <kconfigskeleton.h>
#include <kdebug.h>

#include <kapplication.h>
class KDesktopMenuSettings : public KConfigSkeleton
{
  public:

    static KDesktopMenuSettings *self();
    ~KDesktopMenuSettings();

    /**
      Set The font used for the main KDesktop menu
    */
    static
    void setMenuFont( const QFont & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "MenuFont" ) ))
        self()->mMenuFont = v;
    }

    /**
      Get The font used for the main KDesktop menu
    */
    static
    QFont menuFont()
    {
      return self()->mMenuFont;
    }

    /**
      Set The colour of the font for the main KDesktop menu
    */
    static
    void setMenuFontColour( const QColor & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "MenuFontColour" ) ))
        self()->mMenuFontColour = v;
    }

    /**
      Get The colour of the font for the main KDesktop menu
    */
    static
    QColor menuFontColour()
    {
      return self()->mMenuFontColour;
    }

    /**
      Set Determines whether or not to show the KMenu Icon
    */
    static
    void setShowMenuIcon( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowMenuIcon" ) ))
        self()->mShowMenuIcon = v;
    }

    /**
      Get Determines whether or not to show the KMenu Icon
    */
    static
    bool showMenuIcon()
    {
      return self()->mShowMenuIcon;
    }

    /**
      Set Alternate text for the Programs menu
    */
    static
    void setProgramsName( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ProgramsName" ) ))
        self()->mProgramsName = v;
    }

    /**
      Get Alternate text for the Programs menu
    */
    static
    QString programsName()
    {
      return self()->mProgramsName;
    }

    /**
      Set Alternate text for the Actions menu
    */
    static
    void setActionsName( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ActionsName" ) ))
        self()->mActionsName = v;
    }

    /**
      Get Alternate text for the Actions menu
    */
    static
    QString actionsName()
    {
      return self()->mActionsName;
    }

    /**
      Set Alternate text for the Desktop menu
    */
    static
    void setDesktopName( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "DesktopName" ) ))
        self()->mDesktopName = v;
    }

    /**
      Get Alternate text for the Desktop menu
    */
    static
    QString desktopName()
    {
      return self()->mDesktopName;
    }

    /**
      Set Show the Programs menu
    */
    static
    void setShowProgramsMenu( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowProgramsMenu" ) ))
        self()->mShowProgramsMenu = v;
    }

    /**
      Get Show the Programs menu
    */
    static
    bool showProgramsMenu()
    {
      return self()->mShowProgramsMenu;
    }

    /**
      Set Show the Actions menu
    */
    static
    void setShowActionsMenu( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowActionsMenu" ) ))
        self()->mShowActionsMenu = v;
    }

    /**
      Get Show the Actions menu
    */
    static
    bool showActionsMenu()
    {
      return self()->mShowActionsMenu;
    }

    /**
      Set Show the Desktop Menu
    */
    static
    void setShowDesktopMenu( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowDesktopMenu" ) ))
        self()->mShowDesktopMenu = v;
    }

    /**
      Get Show the Desktop Menu
    */
    static
    bool showDesktopMenu()
    {
      return self()->mShowDesktopMenu;
    }

    /**
      Set Show the system default email client in Programs menu
    */
    static
    void setShowDefaultEmailClient( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowDefaultEmailClient" ) ))
        self()->mShowDefaultEmailClient = v;
    }

    /**
      Get Show the system default email client in Programs menu
    */
    static
    bool showDefaultEmailClient()
    {
      return self()->mShowDefaultEmailClient;
    }

    /**
      Set Use a custom email client
    */
    static
    void setUseCustomEmailClient( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UseCustomEmailClient" ) ))
        self()->mUseCustomEmailClient = v;
    }

    /**
      Get Use a custom email client
    */
    static
    bool useCustomEmailClient()
    {
      return self()->mUseCustomEmailClient;
    }

    /**
      Set Email client set using internal configuration options
    */
    static
    void setCustomEmailClient( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "CustomEmailClient" ) ))
        self()->mCustomEmailClient = v;
    }

    /**
      Get Email client set using internal configuration options
    */
    static
    QString customEmailClient()
    {
      return self()->mCustomEmailClient;
    }

    /**
      Set The custom email client is a terminal application
    */
    static
    void setUseTerminalCustomEmailClient( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UseTerminalCustomEmailClient" ) ))
        self()->mUseTerminalCustomEmailClient = v;
    }

    /**
      Get The custom email client is a terminal application
    */
    static
    bool useTerminalCustomEmailClient()
    {
      return self()->mUseTerminalCustomEmailClient;
    }

    /**
      Set Show the system default browser in the Programs menu
    */
    static
    void setShowDefaultBrowser( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowDefaultBrowser" ) ))
        self()->mShowDefaultBrowser = v;
    }

    /**
      Get Show the system default browser in the Programs menu
    */
    static
    bool showDefaultBrowser()
    {
      return self()->mShowDefaultBrowser;
    }

    /**
      Set Use a custom web browser
    */
    static
    void setUseCustomBrowser( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UseCustomBrowser" ) ))
        self()->mUseCustomBrowser = v;
    }

    /**
      Get Use a custom web browser
    */
    static
    bool useCustomBrowser()
    {
      return self()->mUseCustomBrowser;
    }

    /**
      Set Browser set using internal configuration options
    */
    static
    void setCustomBrowser( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "CustomBrowser" ) ))
        self()->mCustomBrowser = v;
    }

    /**
      Get Browser set using internal configuration options
    */
    static
    QString customBrowser()
    {
      return self()->mCustomBrowser;
    }

    static
    void writeConfig()
    {
      static_cast<KConfigSkeleton*>(self())->writeConfig();
    }
  protected:
    KDesktopMenuSettings();
    static KDesktopMenuSettings *mSelf;


    // General
    QFont mMenuFont;
    QColor mMenuFontColour;
    bool mShowMenuIcon;

    // Root Menus
    QString mProgramsName;
    QString mActionsName;
    QString mDesktopName;
    bool mShowProgramsMenu;
    bool mShowActionsMenu;
    bool mShowDesktopMenu;

    // Menu Items
    bool mShowDefaultEmailClient;
    bool mUseCustomEmailClient;
    QString mCustomEmailClient;
    bool mUseTerminalCustomEmailClient;
    bool mShowDefaultBrowser;
    bool mUseCustomBrowser;
    QString mCustomBrowser;

  private:
};

#endif

